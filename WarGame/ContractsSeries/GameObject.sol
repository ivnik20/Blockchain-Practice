
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "IGameObject.sol";

contract GameObject is IGameObject{
    uint internal defencePoints = 2;
    int internal hitPoints = 5;

  modifier Accept() {
    tvm.accept();
    _;
  }

  function GetDefencePoints() virtual public Accept returns(uint defenceValue) {
      defenceValue = defencePoints;
    }

  function TakeAttack(uint value) override external Accept{
    hitPoints -= int(value - defencePoints);
    if(IsDead())
    Die(msg.sender);
  }

  function IsDead() private Accept returns (bool) {
      if(hitPoints <= 0)
      return true;
      return false;
  }

    function Die(address winner) virtual public Accept{
        require(msg.sender == address(this));
        winner.transfer(1, true, 128 + 32);
    }
}
