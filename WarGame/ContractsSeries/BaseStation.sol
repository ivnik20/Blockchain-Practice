
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "GameObject.sol";

contract BaseStation is GameObject{

    constructor() public Accept{
        defencePoints = 1;
        hitPoints = 10;
    }

    mapping(address => bool) units;

    modifier CheckAccess() {
    require(units.exists(msg.sender)||msg.sender == address(this), 100 , "Access violation!");
    _;
    }
    
    function GetDefencePoints() override public Accept returns(uint defenceValue) {
      defenceValue = defencePoints;
    }

    function AddUnit() public Accept CheckAccess{
        units[msg.sender]=true;
    }

    function DeleteUnit(address toDelete) public Accept CheckAccess{
        delete units[toDelete];
    }

    function Die(address winner) override public Accept{
        require(msg.sender == address(this));
        for ((address toDelete, ):units){
            GameObject(toDelete).Die(winner);
        }
        winner.transfer(1, true, 128 + 32);
    }
}
